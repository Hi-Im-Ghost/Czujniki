

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 01 13:47:40 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F74
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F74 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009F                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  010F                     	;# 
   103  018C                     	;# 
   104                           
   105                           	psect	idataBANK0
   106  0086                     __pidataBANK0:
   107                           
   108                           ;initializer for _lastStatExit
   109  0086  3401               	retlw	1
   110  0087  3400               	retlw	0
   111                           
   112                           ;initializer for _lastStatEntry
   113  0088  3401               	retlw	1
   114  0089  3400               	retlw	0
   115                           
   116                           ;initializer for _counter
   117  008A  3412               	retlw	18
   118  008B  3400               	retlw	0
   119  0006                     _PORTBbits	set	6
   120  000B                     _INTCONbits	set	11
   121  0007                     _PORTCbits	set	7
   122  0087                     _TRISCbits	set	135
   123  0081                     _OPTION_REGbits	set	129
   124  0086                     _TRISBbits	set	134
   125                           
   126                           	psect	cinit
   127  000F                     start_initialization:	
   128                           ; #config settings
   129                           
   130  000F                     __initialization:
   131                           
   132                           ; Initialize objects allocated to BANK0
   133  000F  118A  2086  118A   	fcall	__pidataBANK0	;fetch initializer
   134  0012  00A0               	movwf	__pdataBANK0& (0+127)
   135  0013  118A  2087  118A   	fcall	__pidataBANK0+1	;fetch initializer
   136  0016  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   137  0017  118A  2088  118A   	fcall	__pidataBANK0+2	;fetch initializer
   138  001A  00A2               	movwf	(__pdataBANK0+2)& (0+127)
   139  001B  118A  2089  118A   	fcall	__pidataBANK0+3	;fetch initializer
   140  001E  00A3               	movwf	(__pdataBANK0+3)& (0+127)
   141  001F  118A  208A  118A   	fcall	__pidataBANK0+4	;fetch initializer
   142  0022  00A4               	movwf	(__pdataBANK0+4)& (0+127)
   143  0023  118A  208B  118A   	fcall	__pidataBANK0+5	;fetch initializer
   144  0026  00A5               	movwf	(__pdataBANK0+5)& (0+127)
   145  0027                     end_of_initialization:	
   146                           ;End of C runtime variable initialization code
   147                           
   148  0027                     __end_of__initialization:
   149  0027  0183               	clrf	3
   150  0028  118A  2876         	ljmp	_main	;jump to C main() function
   151                           
   152                           	psect	dataBANK0
   153  0020                     __pdataBANK0:
   154  0020                     _lastStatExit:
   155  0020                     	ds	2
   156  0022                     _lastStatEntry:
   157  0022                     	ds	2
   158  0024                     _counter:
   159  0024                     	ds	2
   160                           
   161                           	psect	cstackCOMMON
   162  0000                     __pcstackCOMMON:
   163  0000                     ??_main:
   164                           
   165                           	psect	cstackBANK0
   166  0026                     __pcstackBANK0:	
   167                           ; 1 bytes @ 0x0
   168                           
   169  0026                     ?_main:
   170  0026                     ?_ISR:	
   171                           ; 1 bytes @ 0x0
   172                           
   173  0026                     ??_ISR:	
   174                           ; 1 bytes @ 0x0
   175                           
   176                           
   177                           ; 1 bytes @ 0x0
   178  0026                     	ds	5
   179                           
   180                           	psect	maintext
   181  0076                     __pmaintext:	
   182 ;;
   183 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   184 ;;
   185 ;; *************** function _main *****************
   186 ;; Defined at:
   187 ;;		line 13 in file "Czujnik.c"
   188 ;; Parameters:    Size  Location     Type
   189 ;;		None
   190 ;; Auto vars:     Size  Location     Type
   191 ;;		None
   192 ;; Return value:  Size  Location     Type
   193 ;;                  1    wreg      void 
   194 ;; Registers used:
   195 ;;		None
   196 ;; Tracked objects:
   197 ;;		On entry : B00/0
   198 ;;		On exit  : 0/0
   199 ;;		Unchanged: 0/0
   200 ;; Data sizes:     COMMON   BANK0   BANK1
   201 ;;      Params:         0       0       0
   202 ;;      Locals:         0       0       0
   203 ;;      Temps:          0       0       0
   204 ;;      Totals:         0       0       0
   205 ;;Total ram usage:        0 bytes
   206 ;; Hardware stack levels required when called: 1
   207 ;; This function calls:
   208 ;;		Nothing
   209 ;; This function is called by:
   210 ;;		Startup code after reset
   211 ;; This function uses a non-reentrant model
   212 ;;
   213                           
   214                           
   215                           ;psect for function _main
   216  0076                     _main:
   217  0076                     l568:	
   218                           ;incstack = 0
   219                           ; Regs used in _main: []
   220                           
   221                           
   222                           ;Czujnik.c: 16: TRISBbits.TRISB6 = 1;
   223  0076  1683               	bsf	3,5	;RP0=1, select bank1
   224  0077  1303               	bcf	3,6	;RP1=0, select bank1
   225  0078  1706               	bsf	6,6	;volatile
   226                           
   227                           ;Czujnik.c: 17: TRISBbits.TRISB7 = 1;
   228  0079  1786               	bsf	6,7	;volatile
   229                           
   230                           ;Czujnik.c: 18: OPTION_REGbits.nRBPU = 0;
   231  007A  1381               	bcf	1,7	;volatile
   232                           
   233                           ;Czujnik.c: 21: TRISCbits.TRISC0 = 0;
   234  007B  1007               	bcf	7,0	;volatile
   235                           
   236                           ;Czujnik.c: 22: PORTCbits.RC0 = 0;
   237  007C  1283               	bcf	3,5	;RP0=0, select bank0
   238  007D  1303               	bcf	3,6	;RP1=0, select bank0
   239  007E  1007               	bcf	7,0	;volatile
   240                           
   241                           ;Czujnik.c: 25: INTCONbits.RBIF = 0;
   242  007F  100B               	bcf	11,0	;volatile
   243                           
   244                           ;Czujnik.c: 26: INTCONbits.RBIE = 1;
   245  0080  158B               	bsf	11,3	;volatile
   246                           
   247                           ;Czujnik.c: 27: INTCONbits.INTE = 1;
   248  0081  160B               	bsf	11,4	;volatile
   249                           
   250                           ;Czujnik.c: 28: INTCONbits.GIE = 1;
   251  0082  178B               	bsf	11,7	;volatile
   252  0083                     l23:	
   253                           ;Czujnik.c: 30: while(1)
   254                           
   255  0083                     l24:	
   256                           ;Czujnik.c: 31: {
   257                           
   258  0083  2883               	goto	l23
   259  0084  118A  280D         	ljmp	start
   260  0086                     __end_of_main:
   261                           
   262                           	psect	text1
   263  002A                     __ptext1:	
   264 ;; *************** function _ISR *****************
   265 ;; Defined at:
   266 ;;		line 36 in file "Czujnik.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;		None
   269 ;; Auto vars:     Size  Location     Type
   270 ;;		None
   271 ;; Return value:  Size  Location     Type
   272 ;;                  1    wreg      void 
   273 ;; Registers used:
   274 ;;		wreg, status,2, status,0
   275 ;; Tracked objects:
   276 ;;		On entry : 0/0
   277 ;;		On exit  : 0/0
   278 ;;		Unchanged: 0/0
   279 ;; Data sizes:     COMMON   BANK0   BANK1
   280 ;;      Params:         0       0       0
   281 ;;      Locals:         0       0       0
   282 ;;      Temps:          0       5       0
   283 ;;      Totals:         0       5       0
   284 ;;Total ram usage:        5 bytes
   285 ;; Hardware stack levels used: 1
   286 ;; This function calls:
   287 ;;		Nothing
   288 ;; This function is called by:
   289 ;;		Interrupt level 1
   290 ;; This function uses a non-reentrant model
   291 ;;
   292                           
   293                           
   294                           ;psect for function _ISR
   295  002A                     _ISR:
   296  002A                     i1l570:
   297                           
   298                           ;Czujnik.c: 37: if(INTCONbits.RBIF == 1 )
   299  002A  1C0B               	btfss	11,0	;volatile
   300  002B  282D               	goto	u7_21
   301  002C  282E               	goto	u7_20
   302  002D                     u7_21:
   303  002D  286F               	goto	i1l36
   304  002E                     u7_20:
   305  002E                     i1l572:
   306                           
   307                           ;Czujnik.c: 38: {;Czujnik.c: 40: if(PORTBbits.RB6 == 0 && lastStatEntry == 1){
   308  002E  1B06               	btfsc	6,6	;volatile
   309  002F  2831               	goto	u8_21
   310  0030  2832               	goto	u8_20
   311  0031                     u8_21:
   312  0031  283E               	goto	i1l578
   313  0032                     u8_20:
   314  0032                     i1l574:
   315  0032  0322               	decf	_lastStatEntry,w	;volatile
   316  0033  0423               	iorwf	_lastStatEntry+1,w	;volatile
   317  0034  1D03               	btfss	3,2
   318  0035  2837               	goto	u9_21
   319  0036  2838               	goto	u9_20
   320  0037                     u9_21:
   321  0037  283E               	goto	i1l578
   322  0038                     u9_20:
   323  0038                     i1l576:
   324                           
   325                           ;Czujnik.c: 41: ++counter;
   326  0038  3001               	movlw	1
   327  0039  07A4               	addwf	_counter,f	;volatile
   328  003A  1803               	skipnc
   329  003B  0AA5               	incf	_counter+1,f	;volatile
   330  003C  3000               	movlw	0
   331  003D  07A5               	addwf	_counter+1,f	;volatile
   332  003E                     i1l578:
   333                           
   334                           ;Czujnik.c: 42: };Czujnik.c: 44: if(PORTBbits.RB7 == 0 && lastStatExit == 1){
   335  003E  1B86               	btfsc	6,7	;volatile
   336  003F  2841               	goto	u10_21
   337  0040  2842               	goto	u10_20
   338  0041                     u10_21:
   339  0041  284E               	goto	i1l584
   340  0042                     u10_20:
   341  0042                     i1l580:
   342  0042  0320               	decf	_lastStatExit,w	;volatile
   343  0043  0421               	iorwf	_lastStatExit+1,w	;volatile
   344  0044  1D03               	btfss	3,2
   345  0045  2847               	goto	u11_21
   346  0046  2848               	goto	u11_20
   347  0047                     u11_21:
   348  0047  284E               	goto	i1l584
   349  0048                     u11_20:
   350  0048                     i1l582:
   351                           
   352                           ;Czujnik.c: 45: --counter;
   353  0048  3001               	movlw	1
   354  0049  02A4               	subwf	_counter,f	;volatile
   355  004A  3000               	movlw	0
   356  004B  1C03               	skipc
   357  004C  03A5               	decf	_counter+1,f	;volatile
   358  004D  02A5               	subwf	_counter+1,f	;volatile
   359  004E                     i1l584:
   360                           
   361                           ;Czujnik.c: 46: };Czujnik.c: 47: lastStatEntry = PORTBbits.RB6;
   362  004E  0E06               	swapf	6,w	;volatile
   363  004F  00A6               	movwf	??_ISR
   364  0050  0CA6               	rrf	??_ISR,f
   365  0051  0C26               	rrf	??_ISR,w
   366  0052  3901               	andlw	1
   367  0053  00A7               	movwf	??_ISR+1
   368  0054  01A8               	clrf	??_ISR+2
   369  0055  0827               	movf	??_ISR+1,w
   370  0056  00A2               	movwf	_lastStatEntry	;volatile
   371  0057  0828               	movf	??_ISR+2,w
   372  0058  00A3               	movwf	_lastStatEntry+1	;volatile
   373  0059                     i1l586:
   374                           
   375                           ;Czujnik.c: 48: lastStatExit = PORTBbits.RB7;
   376  0059  0D06               	rlf	6,w	;volatile
   377  005A  0D06               	rlf	6,w	;volatile
   378  005B  3901               	andlw	1
   379  005C  00A6               	movwf	??_ISR
   380  005D  01A7               	clrf	??_ISR+1
   381  005E  0826               	movf	??_ISR,w
   382  005F  00A0               	movwf	_lastStatExit	;volatile
   383  0060  0827               	movf	??_ISR+1,w
   384  0061  00A1               	movwf	_lastStatExit+1	;volatile
   385                           
   386                           ;Czujnik.c: 50: if(counter>=20){
   387  0062  3000               	movlw	0
   388  0063  0225               	subwf	_counter+1,w	;volatile
   389  0064  3014               	movlw	20
   390  0065  1903               	skipnz
   391  0066  0224               	subwf	_counter,w	;volatile
   392  0067  1C03               	skipc
   393  0068  286A               	goto	u12_21
   394  0069  286B               	goto	u12_20
   395  006A                     u12_21:
   396  006A  286D               	goto	i1l34
   397  006B                     u12_20:
   398  006B                     i1l588:
   399                           
   400                           ;Czujnik.c: 51: PORTCbits.RC0=1;
   401  006B  1407               	bsf	7,0	;volatile
   402                           
   403                           ;Czujnik.c: 52: }
   404  006C  286E               	goto	i1l35
   405  006D                     i1l34:
   406                           
   407                           ;Czujnik.c: 53: else{;Czujnik.c: 54: PORTCbits.RC0=0;
   408  006D  1007               	bcf	7,0	;volatile
   409  006E                     i1l35:
   410                           
   411                           ;Czujnik.c: 55: };Czujnik.c: 57: INTCONbits.RBIF = 0;
   412  006E  100B               	bcf	11,0	;volatile
   413  006F                     i1l36:
   414  006F  082A               	movf	??_ISR+4,w
   415  0070  008A               	movwf	10
   416  0071  0E29               	swapf	??_ISR+3,w
   417  0072  0083               	movwf	3
   418  0073  0EFE               	swapf	btemp,f
   419  0074  0E7E               	swapf	btemp,w
   420  0075  0009               	retfie
   421  0076                     __end_of_ISR:
   422  007E                     btemp	set	126	;btemp
   423  007E                     wtemp0	set	126
   424                           
   425                           	psect	intentry
   426  0004                     __pintentry:	
   427                           ;incstack = 0
   428                           ; Regs used in _ISR: [wreg+status,2+status,0]
   429                           
   430  0004                     interrupt_function:
   431  007E                     saved_w	set	btemp
   432  0004  00FE               	movwf	btemp
   433  0005  0E03               	swapf	3,w
   434  0006  1283               	bcf	3,5	;RP0=0, select bank0
   435  0007  1303               	bcf	3,6	;RP1=0, select bank0
   436  0008  00A9               	movwf	??_ISR+3
   437  0009  080A               	movf	10,w
   438  000A  00AA               	movwf	??_ISR+4
   439  000B  118A  282A         	ljmp	_ISR
   440                           
   441                           	psect	config
   442                           
   443                           ;Config register CONFIG @ 0x2007
   444                           ;	Oscillator Selection bits
   445                           ;	FOSC = 0x3, unprogrammed default
   446                           ;	Watchdog Timer Enable bit
   447                           ;	WDTE = OFF, WDT disabled
   448                           ;	Power-up Timer Enable bit
   449                           ;	PWRTE = 0x1, unprogrammed default
   450                           ;	FLASH Program Memory Code Protection bit
   451                           ;	CP = 0x1, unprogrammed default
   452                           ;	Brown-out Reset Enable bit
   453                           ;	BOREN = 0x1, unprogrammed default
   454  2007                     	org	8199
   455  2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94      5      11
    BANK1            94      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               5E      0       0       7        0.0%
BITBANK1            5E      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               5E      5       B       5       11.7%
BITBANK0            5E      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       B       8        0.0%
ABS                  0      0       B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 01 13:47:40 2021

                     l23 0083                       l24 0083                      l568 0076  
                    _ISR 002A                     ?_ISR 0026                     i1l34 006D  
                   i1l35 006E                     i1l36 006F                     u7_20 002E  
                   u7_21 002D                     u8_20 0032                     u8_21 0031  
                   u9_20 0038                     u9_21 0037                     _main 0076  
                   btemp 007E                     start 000D                    ??_ISR 0026  
                  ?_main 0026                    i1l570 002A                    i1l580 0042  
                  i1l572 002E                    i1l582 0048                    i1l574 0032  
                  i1l584 004E                    i1l576 0038                    i1l586 0059  
                  i1l578 003E                    i1l588 006B                    u10_20 0042  
                  u10_21 0041                    u11_20 0048                    u11_21 0047  
                  u12_20 006B                    u12_21 006A                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0086                   ??_main 0000            _lastStatEntry 0022  
                 saved_w 007E  __end_of__initialization 0027           __pcstackCOMMON 0000  
           __pidataBANK0 0086           _OPTION_REGbits 0081               __pmaintext 0076  
             __pintentry 0004                  __ptext1 002A             __size_of_ISR 004C  
                _counter 0024     end_of_initialization 0027                _PORTBbits 0006  
              _PORTCbits 0007                _TRISBbits 0086                _TRISCbits 0087  
    start_initialization 000F              __end_of_ISR 0076             _lastStatExit 0020  
            __pdataBANK0 0020                ___latbits 0001            __pcstackBANK0 0026  
      interrupt_function 0004            __size_of_main 0010               _INTCONbits 000B  
               intlevel1 0000  
